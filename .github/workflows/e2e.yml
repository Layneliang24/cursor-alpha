name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # 每天凌晨2点运行E2E测试
    - cron: '0 2 * * *'

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: alpha_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        shard: [1, 2, 3, 4]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          package-lock.json
          frontend/package-lock.json
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: |
          backend/requirements.txt
          tests/requirements.txt
    
    - name: Install root dependencies
      run: npm ci
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Install backend dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        pip install -r ../tests/requirements.txt
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}
    
    - name: Setup test database
      run: |
        cd backend
        python manage.py migrate --settings=alpha.settings.test
        python manage.py loaddata fixtures/test_data.json --settings=alpha.settings.test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/alpha_test
        DJANGO_SETTINGS_MODULE: alpha.settings.test
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
    
    - name: Run E2E tests
      run: |
        npx playwright test --project=${{ matrix.browser }} --shard=${{ matrix.shard }}/4
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/alpha_test
        DJANGO_SETTINGS_MODULE: alpha.settings.test
        CI: true
    
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}-${{ matrix.shard }}
        path: playwright-report/
        retention-days: 30
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.browser }}-${{ matrix.shard }}
        path: test-results/
        retention-days: 30
    
    - name: Upload Screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: screenshots-${{ matrix.browser }}-${{ matrix.shard }}
        path: test-results/screenshots/
        retention-days: 30
    
    - name: Upload Videos
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: videos-${{ matrix.browser }}-${{ matrix.shard }}
        path: test-results/videos/
        retention-days: 30

  merge-reports:
    if: always()
    needs: [e2e-tests]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download all reports
      uses: actions/download-artifact@v4
      with:
        path: all-reports
        pattern: playwright-report-*
    
    - name: Merge reports
      run: |
        npx playwright merge-reports --reporter html all-reports/playwright-report-*
    
    - name: Upload merged report
      uses: actions/upload-artifact@v4
      with:
        name: merged-playwright-report
        path: playwright-report/
        retention-days: 30
    
    - name: Deploy report to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./playwright-report
        destination_dir: e2e-reports/${{ github.run_number }}

  performance-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || contains(github.event.head_commit.message, '[perf]')
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: alpha_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci
        cd ../backend && pip install -r requirements.txt
    
    - name: Install Playwright
      run: npx playwright install chromium
    
    - name: Setup test environment
      run: |
        cd backend
        python manage.py migrate --settings=alpha.settings.test
        python manage.py loaddata fixtures/test_data.json --settings=alpha.settings.test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/alpha_test
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
    
    - name: Run performance tests
      run: |
        npx playwright test --grep "@performance" --project=chromium
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/alpha_test
        DJANGO_SETTINGS_MODULE: alpha.settings.test
    
    - name: Upload performance report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-report
        path: |
          playwright-report/
          test-results/
        retention-days: 30

  visual-regression:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: alpha_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci
        cd ../backend && pip install -r requirements.txt
    
    - name: Install Playwright
      run: npx playwright install chromium
    
    - name: Setup test environment
      run: |
        cd backend
        python manage.py migrate --settings=alpha.settings.test
        python manage.py loaddata fixtures/test_data.json --settings=alpha.settings.test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/alpha_test
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
    
    - name: Run visual regression tests
      run: |
        npx playwright test --grep "@visual" --project=chromium --update-snapshots
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/alpha_test
        DJANGO_SETTINGS_MODULE: alpha.settings.test
    
    - name: Upload visual diff
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: visual-diff
        path: test-results/
        retention-days: 30

  accessibility-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: alpha_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci
        cd ../backend && pip install -r requirements.txt
    
    - name: Install Playwright
      run: npx playwright install chromium
    
    - name: Setup test environment
      run: |
        cd backend
        python manage.py migrate --settings=alpha.settings.test
        python manage.py loaddata fixtures/test_data.json --settings=alpha.settings.test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/alpha_test
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
    
    - name: Run accessibility tests
      run: |
        npx playwright test --grep "@accessibility" --project=chromium
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/alpha_test
        DJANGO_SETTINGS_MODULE: alpha.settings.test
    
    - name: Upload accessibility report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-report
        path: |
          playwright-report/
          test-results/
        retention-days: 30