name: Deploy Staged

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Check required secrets
        run: |
          test -n "${{ secrets.HOST }}" || (echo "Missing HOST"; exit 1)
          test -n "${{ secrets.USERNAME }}" || (echo "Missing USERNAME"; exit 1)
          test -n "${{ secrets.SSH_KEY }}" || (echo "Missing SSH_KEY"; exit 1)
          test -n "${{ secrets.PORT }}" || (echo "Missing PORT"; exit 1)
          test -n "${{ secrets.PROJECT_DIR }}" || (echo "Missing PROJECT_DIR"; exit 1)

      - name: Deploy Step 1 - Update Code
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          timeout: 10m
          script: |
            set -e
            cd ${{ secrets.PROJECT_DIR }}
            echo "步骤1: 更新代码..."
            git fetch --all
            git reset --hard origin/main
            echo "代码更新完成"

      - name: Deploy Step 2 - Build Images
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          timeout: 20m
          script: |
            set -e
            cd ${{ secrets.PROJECT_DIR }}
            echo "步骤2: 构建镜像..."
            docker compose -f docker-compose.prod.yml --env-file production.env build --parallel backend frontend
            echo "镜像构建完成"

      - name: Deploy Step 3 - Start Services
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          timeout: 15m
          script: |
            set -e
            cd ${{ secrets.PROJECT_DIR }}
            echo "步骤3: 启动服务..."
            
            # 启动MySQL
            docker compose -f docker-compose.prod.yml --env-file production.env up -d mysql
            sleep 15  # 等待MySQL完全启动
            
            # 数据库迁移
            docker compose -f docker-compose.prod.yml --env-file production.env run --rm backend python manage.py migrate --noinput
            
            # 启动应用
            docker compose -f docker-compose.prod.yml --env-file production.env up -d backend frontend
            
            # 清理
            docker image prune -f
            
            echo "部署完成！"
