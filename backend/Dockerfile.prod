FROM python:3.9-slim

WORKDIR /app

# 设置环境变量
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DJANGO_SETTINGS_MODULE=alpha.settings

# 安装系统依赖
RUN set -eux; \
  if [ -f /etc/apt/sources.list ]; then \
    sed -i -e 's|deb.debian.org|mirrors.aliyun.com|g' \
           -e 's|security.debian.org|mirrors.aliyun.com|g' /etc/apt/sources.list; \
  elif [ -f /etc/apt/sources.list.d/debian.sources ]; then \
    sed -i -e 's|deb.debian.org|mirrors.aliyun.com|g' \
           -e 's|security.debian.org|mirrors.aliyun.com|g' /etc/apt/sources.list.d/debian.sources; \
  fi; \
  apt-get update; \
  apt-get install -y --no-install-recommends \
    gcc default-libmysqlclient-dev pkg-config curl; \
  rm -rf /var/lib/apt/lists/*

# 创建非root用户
RUN groupadd -r django && useradd -r -g django django

# 复制requirements文件
COPY requirements.txt .

# 安装Python依赖
RUN pip config set global.index-url https://mirrors.aliyun.com/pypi/simple && \
      pip config set install.trusted-host mirrors.aliyun.com
RUN pip install --no-cache-dir -r requirements.txt

# 复制项目文件
COPY . .

# 创建必要目录并设置权限
RUN mkdir -p media/avatars media/uploads/images logs \
    && chown -R django:django /app

# 收集静态文件
RUN python manage.py collectstatic --noinput

# 切换到非root用户
USER django

# 健康检查
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/api/v1/ || exit 1

# 暴露端口
EXPOSE 8000

# 启动命令
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "--timeout", "120", "alpha.wsgi:application"]
