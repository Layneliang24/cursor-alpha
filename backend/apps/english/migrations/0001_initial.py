# Generated by Django 4.2.7 on 2025-08-12 20:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EntityVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("entity_type", models.CharField(max_length=50, verbose_name="实体类型")),
                ("entity_id", models.BigIntegerField(verbose_name="实体ID")),
                ("snapshot", models.JSONField(verbose_name="快照")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "实体版本",
                "verbose_name_plural": "实体版本",
                "db_table": "english_entity_versions",
            },
        ),
        migrations.CreateModel(
            name="Expression",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("is_deleted", models.BooleanField(default=False, verbose_name="是否删除")),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="删除时间"),
                ),
                ("expression", models.CharField(max_length=500, verbose_name="表达")),
                ("meaning", models.TextField(blank=True, null=True, verbose_name="含义")),
                (
                    "category",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="分类"
                    ),
                ),
                (
                    "scenario",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="场景"
                    ),
                ),
                (
                    "difficulty_level",
                    models.CharField(
                        default="beginner", max_length=20, verbose_name="难度"
                    ),
                ),
                (
                    "usage_frequency",
                    models.CharField(
                        default="medium", max_length=10, verbose_name="使用频率"
                    ),
                ),
                (
                    "cultural_background",
                    models.TextField(blank=True, null=True, verbose_name="文化背景"),
                ),
                (
                    "source_url",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="来源URL"
                    ),
                ),
                (
                    "source_api",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="来源API"
                    ),
                ),
                (
                    "license",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="许可证"
                    ),
                ),
                (
                    "quality_score",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=3, verbose_name="质量分"
                    ),
                ),
            ],
            options={
                "verbose_name": "表达",
                "verbose_name_plural": "表达",
                "db_table": "english_expressions",
            },
        ),
        migrations.CreateModel(
            name="News",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("is_deleted", models.BooleanField(default=False, verbose_name="是否删除")),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="删除时间"),
                ),
                ("title", models.CharField(max_length=500, verbose_name="标题")),
                ("summary", models.TextField(blank=True, null=True, verbose_name="摘要")),
                ("content", models.TextField(blank=True, null=True, verbose_name="正文")),
                (
                    "category",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="分类"
                    ),
                ),
                (
                    "difficulty_level",
                    models.CharField(
                        default="intermediate", max_length=20, verbose_name="难度"
                    ),
                ),
                (
                    "publish_date",
                    models.DateField(blank=True, null=True, verbose_name="发布日期"),
                ),
                ("word_count", models.IntegerField(default=0, verbose_name="词数")),
                (
                    "source",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="来源"
                    ),
                ),
                (
                    "source_url",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="来源URL"
                    ),
                ),
                (
                    "license",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="许可证"
                    ),
                ),
                (
                    "quality_score",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=3, verbose_name="质量分"
                    ),
                ),
            ],
            options={
                "verbose_name": "英语新闻",
                "verbose_name_plural": "英语新闻",
                "db_table": "english_news",
            },
        ),
        migrations.CreateModel(
            name="UserWordProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("is_deleted", models.BooleanField(default=False, verbose_name="是否删除")),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="删除时间"),
                ),
                (
                    "status",
                    models.CharField(
                        default="not_learned", max_length=20, verbose_name="状态"
                    ),
                ),
                ("review_count", models.IntegerField(default=0, verbose_name="复习次数")),
                (
                    "last_review_date",
                    models.DateTimeField(blank=True, null=True, verbose_name="最后复习"),
                ),
                (
                    "next_review_date",
                    models.DateTimeField(blank=True, null=True, verbose_name="下次复习"),
                ),
                (
                    "mastery_level",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=3, verbose_name="掌握度"
                    ),
                ),
            ],
            options={
                "verbose_name": "用户单词进度",
                "verbose_name_plural": "用户单词进度",
                "db_table": "user_word_progress",
            },
        ),
        migrations.CreateModel(
            name="Word",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("is_deleted", models.BooleanField(default=False, verbose_name="是否删除")),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="删除时间"),
                ),
                (
                    "word",
                    models.CharField(max_length=128, unique=True, verbose_name="单词"),
                ),
                (
                    "phonetic",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="音标"
                    ),
                ),
                (
                    "part_of_speech",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="词性"
                    ),
                ),
                (
                    "definition",
                    models.TextField(blank=True, null=True, verbose_name="释义"),
                ),
                ("example", models.TextField(blank=True, null=True, verbose_name="例句")),
                (
                    "difficulty_level",
                    models.CharField(
                        default="beginner", max_length=20, verbose_name="难度"
                    ),
                ),
                ("frequency_rank", models.IntegerField(default=0, verbose_name="词频排名")),
                (
                    "category_hint",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="分类提示"
                    ),
                ),
                (
                    "source_url",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="来源URL"
                    ),
                ),
                (
                    "source_api",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="来源API"
                    ),
                ),
                (
                    "license",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="许可证"
                    ),
                ),
                (
                    "quality_score",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=3, verbose_name="质量分"
                    ),
                ),
            ],
            options={
                "verbose_name": "单词",
                "verbose_name_plural": "单词",
                "db_table": "english_words",
            },
        ),
        migrations.CreateModel(
            name="WordCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("is_deleted", models.BooleanField(default=False, verbose_name="是否删除")),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="删除时间"),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="分类名"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="描述"),
                ),
            ],
            options={
                "verbose_name": "单词分类",
                "verbose_name_plural": "单词分类",
                "db_table": "english_word_categories",
            },
        ),
        migrations.CreateModel(
            name="WordCategoryLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "单词-分类关联",
                "verbose_name_plural": "单词-分类关联",
                "db_table": "english_word_category_links",
            },
        ),
        migrations.CreateModel(
            name="WordExample",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("is_deleted", models.BooleanField(default=False, verbose_name="是否删除")),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="删除时间"),
                ),
                ("sentence", models.TextField(verbose_name="例句")),
                (
                    "translation",
                    models.TextField(blank=True, null=True, verbose_name="翻译"),
                ),
                (
                    "source_url",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="来源URL"
                    ),
                ),
                (
                    "quality_score",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=3, verbose_name="质量分"
                    ),
                ),
            ],
            options={
                "verbose_name": "单词例句",
                "verbose_name_plural": "单词例句",
                "db_table": "english_word_examples",
            },
        ),
        migrations.CreateModel(
            name="WordRelation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("relation_type", models.CharField(max_length=20, verbose_name="关系类型")),
                (
                    "note",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="备注"
                    ),
                ),
            ],
            options={
                "verbose_name": "单词关系",
                "verbose_name_plural": "单词关系",
                "db_table": "english_word_relations",
            },
        ),
        migrations.CreateModel(
            name="WordTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("is_deleted", models.BooleanField(default=False, verbose_name="是否删除")),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="删除时间"),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="标签名"),
                ),
            ],
            options={
                "verbose_name": "单词标签",
                "verbose_name_plural": "单词标签",
                "db_table": "english_word_tags",
            },
        ),
        migrations.CreateModel(
            name="WordTagLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="english.wordtag",
                        verbose_name="标签",
                    ),
                ),
                (
                    "word",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="english.word",
                        verbose_name="单词",
                    ),
                ),
            ],
            options={
                "verbose_name": "单词-标签关联",
                "verbose_name_plural": "单词-标签关联",
                "db_table": "english_word_tag_links",
            },
        ),
        migrations.AddIndex(
            model_name="wordtag",
            index=models.Index(fields=["name"], name="english_wor_name_0f8d93_idx"),
        ),
        migrations.AddField(
            model_name="wordrelation",
            name="related_word",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="related_to",
                to="english.word",
                verbose_name="关联单词",
            ),
        ),
        migrations.AddField(
            model_name="wordrelation",
            name="word",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="relations",
                to="english.word",
                verbose_name="单词",
            ),
        ),
        migrations.AddField(
            model_name="wordexample",
            name="word",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="english.word",
                verbose_name="单词",
            ),
        ),
        migrations.AddField(
            model_name="wordcategorylink",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="english.wordcategory",
                verbose_name="分类",
            ),
        ),
        migrations.AddField(
            model_name="wordcategorylink",
            name="word",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="english.word",
                verbose_name="单词",
            ),
        ),
        migrations.AddField(
            model_name="wordcategory",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="english.wordcategory",
                verbose_name="父分类",
            ),
        ),
        migrations.AddIndex(
            model_name="word",
            index=models.Index(fields=["word"], name="english_wor_word_7df8bc_idx"),
        ),
        migrations.AddIndex(
            model_name="word",
            index=models.Index(
                fields=["difficulty_level"], name="english_wor_difficu_451f4b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="word",
            index=models.Index(
                fields=["frequency_rank"], name="english_wor_frequen_6aafaf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="word",
            index=models.Index(
                fields=["quality_score"], name="english_wor_quality_8ad487_idx"
            ),
        ),
        migrations.AddField(
            model_name="userwordprogress",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="用户",
            ),
        ),
        migrations.AddField(
            model_name="userwordprogress",
            name="word",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="english.word",
                verbose_name="单词",
            ),
        ),
        migrations.AddIndex(
            model_name="news",
            index=models.Index(
                fields=["publish_date"], name="english_new_publish_fd4f48_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="news",
            index=models.Index(
                fields=["category"], name="english_new_categor_ab44e4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="news",
            index=models.Index(
                fields=["difficulty_level"], name="english_new_difficu_f70258_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="news",
            index=models.Index(fields=["source"], name="english_new_source_3ba9e6_idx"),
        ),
        migrations.AddIndex(
            model_name="news",
            index=models.Index(
                fields=["quality_score"], name="english_new_quality_aee215_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expression",
            index=models.Index(
                fields=["category"], name="english_exp_categor_9085aa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expression",
            index=models.Index(
                fields=["scenario"], name="english_exp_scenari_4d7116_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expression",
            index=models.Index(
                fields=["difficulty_level"], name="english_exp_difficu_d93bdf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expression",
            index=models.Index(
                fields=["usage_frequency"], name="english_exp_usage_f_37cc68_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="expression",
            unique_together={("expression", "scenario")},
        ),
        migrations.AddField(
            model_name="entityversion",
            name="changed_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="变更人",
            ),
        ),
        migrations.AddIndex(
            model_name="wordtaglink",
            index=models.Index(fields=["word"], name="english_wor_word_id_083cdf_idx"),
        ),
        migrations.AddIndex(
            model_name="wordtaglink",
            index=models.Index(fields=["tag"], name="english_wor_tag_id_400ad3_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="wordtaglink",
            unique_together={("word", "tag")},
        ),
        migrations.AddIndex(
            model_name="wordrelation",
            index=models.Index(fields=["word"], name="english_wor_word_id_799cd5_idx"),
        ),
        migrations.AddIndex(
            model_name="wordrelation",
            index=models.Index(
                fields=["relation_type"], name="english_wor_relatio_95a5c4_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="wordrelation",
            unique_together={("word", "related_word", "relation_type")},
        ),
        migrations.AddIndex(
            model_name="wordexample",
            index=models.Index(fields=["word"], name="english_wor_word_id_081ee7_idx"),
        ),
        migrations.AddIndex(
            model_name="wordexample",
            index=models.Index(
                fields=["quality_score"], name="english_wor_quality_1ccb0d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="wordcategorylink",
            index=models.Index(fields=["word"], name="english_wor_word_id_d39203_idx"),
        ),
        migrations.AddIndex(
            model_name="wordcategorylink",
            index=models.Index(
                fields=["category"], name="english_wor_categor_e8492a_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="wordcategorylink",
            unique_together={("word", "category")},
        ),
        migrations.AddIndex(
            model_name="wordcategory",
            index=models.Index(fields=["name"], name="english_wor_name_96d565_idx"),
        ),
        migrations.AddIndex(
            model_name="wordcategory",
            index=models.Index(
                fields=["parent"], name="english_wor_parent__81f5cc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userwordprogress",
            index=models.Index(
                fields=["user", "next_review_date"],
                name="user_word_p_user_id_e133fd_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="userwordprogress",
            index=models.Index(
                fields=["user", "status"], name="user_word_p_user_id_c6d8b7_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userwordprogress",
            unique_together={("user", "word")},
        ),
        migrations.AddIndex(
            model_name="entityversion",
            index=models.Index(
                fields=["entity_type", "entity_id"],
                name="english_ent_entity__e785ec_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="entityversion",
            index=models.Index(
                fields=["created_at"], name="english_ent_created_e9aede_idx"
            ),
        ),
    ]
