services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: alpha_mysql_prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql/conf.d:/etc/mysql/conf.d
    # 不暴露端口到外部，只在内部网络使用
    expose:
      - "3306"
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - alpha_network

  # Django后端
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: alpha_backend_prod
    restart: unless-stopped
    environment:
      - DB_HOST=mysql
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=False
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
    volumes:
      - ./backend/media:/app/media
      - ./backend/static:/app/static
      - ./logs:/app/logs
    # 不直接暴露端口，通过nginx代理
    expose:
      - "8000"
    depends_on:
      - mysql
    networks:
      - alpha_network
    command: >
      sh -lc '
        python manage.py wait_for_db &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python - <<"PY"
from django.contrib.auth import get_user_model
import os
u = os.getenv("DJANGO_SUPERUSER_USERNAME")
e = os.getenv("DJANGO_SUPERUSER_EMAIL") or ""
p = os.getenv("DJANGO_SUPERUSER_PASSWORD")
if u and p:
    U = get_user_model()
    exists = U.objects.filter(username=u).exists()
    print("superuser exists" if exists else "creating superuser")
    if not exists:
        U.objects.create_superuser(u, e, p)
PY
        gunicorn --bind 0.0.0.0:8000 --workers 3 --timeout 120 alpha.wsgi:application
      '

  # Vue.js前端 + Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: alpha_frontend_prod
    restart: unless-stopped
    ports:
      - "8003:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - backend
    networks:
      - alpha_network

volumes:
  mysql_data:
    driver: local

networks:
  alpha_network:
    driver: bridge

