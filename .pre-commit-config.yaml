# Pre-commit hooks configuration
# See https://pre-commit.com for more information

repos:
  # Python代码格式化和检查
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=127]
        exclude: ^(migrations/|venv/|.venv/)

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile, black, --line-length=127]
        exclude: ^(migrations/|venv/|.venv/)

  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=127, --exclude=migrations]
        additional_dependencies:
          - flake8-docstrings
          - flake8-import-order
          - flake8-bugbear

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies:
          - django-stubs
          - types-requests
          - types-PyYAML
        exclude: ^(migrations/|tests/|venv/|.venv/)
        args: [--ignore-missing-imports]

  # 通用代码检查
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ^(frontend/|.*\.md$)
      - id: end-of-file-fixer
        exclude: ^(frontend/|.*\.md$)
      - id: check-yaml
        exclude: ^(frontend/)
      - id: check-json
        exclude: ^(frontend/)
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: debug-statements
        exclude: ^(frontend/)
      - id: check-docstring-first
        exclude: ^(migrations/|tests/|frontend/)

  # Python安全检查
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, backend/]
        exclude: ^(tests/|migrations/)

  # 前端代码检查
  - repo: local
    hooks:
      - id: eslint
        name: ESLint
        entry: bash -c 'cd frontend && npm run lint:check'
        language: system
        files: ^frontend/.*\.(vue|js|ts)$
        pass_filenames: false

      - id: prettier
        name: Prettier
        entry: bash -c 'cd frontend && npm run format:check'
        language: system
        files: ^frontend/.*\.(vue|js|ts|json|css|scss|html)$
        pass_filenames: false

      - id: vue-tsc
        name: Vue TypeScript Check
        entry: bash -c 'cd frontend && npm run type-check'
        language: system
        files: ^frontend/.*\.(vue|ts)$
        pass_filenames: false

  # 提交信息检查
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Django特定检查
  - repo: local
    hooks:
      - id: django-check
        name: Django Check
        entry: bash -c 'cd backend && python manage.py check'
        language: system
        files: ^backend/.*\.py$
        pass_filenames: false

      - id: django-migrations-check
        name: Django Migrations Check
        entry: bash -c 'cd backend && python manage.py makemigrations --check --dry-run'
        language: system
        files: ^backend/.*\.py$
        pass_filenames: false

      - id: api-contract-check
        name: API Contract Validation
        entry: python scripts/api_contract_check.py --project-root . --fail-on-incompatible
        language: system
        pass_filenames: false
        files: \.py$

# 全局配置
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: '3.0.0'

# CI配置
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false